language: cpp
dist: trusty
sudo: false
os: linux

compiler:
  - gcc
  - clang

env:
  global:
    - YCM_VER=0.8.1
    - YARP_VER=2.3.72
    - KDL_VER=1.4.0
    - CACHE_DIR=~/cached-deps

cache:
  directories: $CACHE_DIR

addons:
  apt:
    packages:
    - libboost-thread-dev # AMOR API
    - libeigen3-dev # AMOR API and YARP
    - libgtest-dev # unit testing
    - lcov # code coverage

before_install:
  #-- Configure Git (needed by YCM)
  - if [ ! `git config --get user.email` ]; then `git config --global user.email 'user@example.com'`; fi
  - if [ ! `git config --get user.name` ]; then `git config --global user.name 'Travis CI'`; fi

  #-- Register SSH deploy key for AMOR API private repository
  - source "$TRAVIS_BUILD_DIR/scripts/travis/configure-ssh.sh"

  #-- Code coverage
  - if [ "$CXX" = "g++" ]; then gem install coveralls-lcov; fi

install:
  #-- Install YCM
  - source "$TRAVIS_BUILD_DIR/scripts/travis/cache-ycm.sh"

  #-- Install YARP
  - source "$TRAVIS_BUILD_DIR/scripts/travis/cache-yarp.sh"

  #-- Install KDL
  - source "$TRAVIS_BUILD_DIR/scripts/travis/cache-kdl.sh"

  # Install color-debug
  - git clone https://github.com/roboticslab-uc3m/color-debug
  - cd color-debug && mkdir build && cd build
  - cmake ..
  - sudo make install
  - cd ../..

  #-- (for AmorCartesianControl) Install AMOR API
  - git clone git@github.com:roboticslab-uc3m/amor-api ~/amor-api
  - mkdir -p ~/amor-api/build
  - cmake -H~/amor-api -B~/amor-api/build
  - make -C ~/amor-api/build -j$(nproc)
  - export AMOR_API_DIR=~/amor-api/build
  - export LD_LIBRARY_PATH=~/amor-api/build/lib:$LD_LIBRARY_PATH

  #-- (for testBasicCartesianControl and apps using proximity sensors) Install yarp-devices
  - git clone https://github.com/roboticslab-uc3m/yarp-devices ~/yarp-devices
  - mkdir -p ~/yarp-devices/build
  - cmake -H~/yarp-devices -B~/yarp-devices/build
  - make -C ~/yarp-devices/build -j$(nproc)
  - export ROBOTICSLAB_YARP_DEVICES_DIR=~/yarp-devices/build
  - export LD_LIBRARY_PATH=~/yarp-devices/build/lib:~/yarp-devices/build/lib/yarp:$LD_LIBRARY_PATH
  - export YARP_DATA_DIRS=~/yarp-devices/build/share/roboticslab-yarp-devices:$YARP_DATA_DIRS

before_script:
  - mkdir -p "$TRAVIS_BUILD_DIR/build" && cd "$_"
  - cmake .. -DCMAKE_INSTALL_PREFIX="$PWD/install" -DENABLE_coverage:BOOL=ON
  - make install
  - export LD_LIBRARY_PATH=$PWD/install/lib:$PWD/install/lib/yarp:$LD_LIBRARY_PATH
  - export YARP_DATA_DIRS=$PWD/install/share/roboticslab-kinematics-dynamics:$YARP_DATA_DIRS

script:
  - bin/testKinRepresentation
  - bin/testKdlSolver
  - bin/testKdlSolverFromFile
  - bin/testAsibotSolverFromFile
  - bin/testKdlTrajectory
  - bin/testBasicCartesianControl

after_success:
  #-- Code coverage
  - if [ "$CXX" = "g++" ]; then source "$TRAVIS_BUILD_DIR/scripts/travis/coverage.sh"; fi

  - make uninstall

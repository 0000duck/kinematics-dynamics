language: cpp
dist: trusty
sudo: required

os:
  - linux

compiler:
  - gcc
  - clang

before_install:
  - if [ ! `git config --get user.email` ]; then `git config --global user.email 'user@example.com'`; fi
  - if [ ! `git config --get user.name` ]; then `git config --global user.name 'Travis CI'`; fi
  - '[[ "$TRAVIS_EVENT_TYPE" = cron ]] && export YARP_CHECKOUT=devel || export YARP_CHECKOUT=master'

install:
  #-- Install cmake and eigen
  - sudo apt-get install cmake libeigen3-dev
  #-- Install yarp
  - git clone --branch="$YARP_CHECKOUT" https://github.com/robotology/yarp
  - cd yarp && mkdir build && cd build
  - cmake .. -DSKIP_ACE=ON -DCREATE_LIB_MATH=ON
  - make
  - sudo make install
  - cd ../..
  #-- Install kdl
  - git clone https://github.com/orocos/orocos_kinematics_dynamics
  - cd orocos_kinematics_dynamics/orocos_kdl && mkdir build && cd build
  - cmake ..
  - make
  - sudo make install
  - cd ../../..
  #-- (For testBasicCartesianControl) Install FakeControlboard currently at https://github.com/roboticslab-uc3m/openrave-yarp-plugins
  - git clone https://github.com/roboticslab-uc3m/openrave-yarp-plugins
  - cd openrave-yarp-plugins
  - git checkout 9f147182b4aaf984170f4ee9a42f8da2a1b44eb1
  - mkdir build && cd build
  - cmake .. -DENABLE_OpenraveYarpControlboard=OFF -DENABLE_OpenraveYarpPaintSquares=OFF -DENABLE_YarpOpenraveControlboard=OFF -DENABLE_YarpOpenraveControlboardCollision=OFF -DENABLE_teoSim=OFF
  - make
  - sudo make install
  - cd ../..
  # see http://gronlier.fr/blog/2015/01/adding-code-coverage-to-your-c-project/
  - if [ "$CXX" = "g++" ]; then wget http://ftp.de.debian.org/debian/pool/main/l/lcov/lcov_1.11.orig.tar.gz; fi
  - if [ "$CXX" = "g++" ]; then tar xf lcov_1.11.orig.tar.gz; fi
  - if [ "$CXX" = "g++" ]; then sudo make -C lcov-1.11/ install; fi
  - if [ "$CXX" = "g++" ]; then gem install coveralls-lcov; fi

before_script:
  - mkdir -p build && cd build
  - cmake .. -DENABLE_coverage=ON
  - make
  - sudo make install
  - sudo ldconfig

script:
  - bin/testKinRepresentation
  - bin/testKdlSolver
  - bin/testKdlSolverFromFile
  - bin/testAsibotSolverFromFile
  - bin/testBasicCartesianControl

after_success:
  #  - cd ${TRAVIS_BUILD_DIR}
  # capture coverage info
  - if [ "$CXX" = "g++" ]; then lcov --directory . --capture --output-file coverage.info; fi
  # filter out system and test code
  - if [ "$CXX" = "g++" ]; then lcov --remove coverage.info  '/usr/*' 'test/*' --output-file coverage.info; fi
  # debug before upload
  - if [ "$CXX" = "g++" ]; then lcov --list coverage.info; fi
  # uploads to coveralls
  #- if [ "$CXX" = "g++" ]; then coveralls-lcov --source-encoding=ISO-8859-1 --repo-token InWqFy6VWMrEUzr2Rn8XV0cGqv3wXWo2d coverage.info; fi
  - if [ "$CXX" = "g++" ]; then coveralls-lcov --source-encoding=ISO-8859-1 coverage.info; fi

  - sudo make uninstall

